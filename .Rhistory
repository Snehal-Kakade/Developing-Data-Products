add2 <- function(x,y){
x+y
}
add2(5,3)
cube <- function(x, n) {
x^3
}
cube <- function(x, n) {
x^3
}
}cube(3)
}
View(cube)
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
class(f)
class(f)
class(z)
class(d)
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
class(f)
install.packages('RMySQL')
library(RMySQL)
ucscDB <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDB,"show databases;");dbDisconnect(ucscDB)
result
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rJava)
con=url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode=readLines(con)
close(con)
htmlCode
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url,useInternalNodes=T)
xpathSApply(html,"/title",xmlValue)
library(XML)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url,useInternalNodes=T)
xpathSApply(html,"/title",xmlValue)
library(httr)
html2 = GET(url)
content2 = content(html2,as="text")
parsedHtml = htmlParse(content2,asText = TRUE)
xpathSApply(parsedHtml,"//title",xmlValue)
google = handle("http://google.com")
pg1 = GET(handle=google,path="/")
pg2 = GET(handle=google,path="search")
pg1
pg2
library(httr)
require(httpuv)
require(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("quiz2", "7f0960054b34b9aba3fe", secret="03b5ceeefcdba7ce86b9f3e0e7f3648b6b34d24e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "7f0960054b34b9aba3fe",
secret = "03b5ceeefcdba7ce86b9f3e0e7f3648b6b34d24e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "7f0960054b34b9aba3fe",
secret = "03b5ceeefcdba7ce86b9f3e0e7f3648b6b34d24e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
##stop_for_status(req)
content(req)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "7f0960054b34b9aba3fe",
secret = "03b5ceeefcdba7ce86b9f3e0e7f3648b6b34d24e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
##stop_for_status(req)
req
content(req)
library(httr)
oauth_endpoints("https://github.com/organizations/SnehalPractical/settings/applications/412093")
myapp <- oauth_app("https://github.com/organizations/SnehalPractical/settings/applications/412093",
key = "7f0960054b34b9aba3fe",
secret = "03b5ceeefcdba7ce86b9f3e0e7f3648b6b34d24e")
github_token <- oauth2.0_token(oauth_endpoints("https://github.com/organizations/SnehalPractical/settings/applications/412093"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
##stop_for_status(req)
req
swirl()
swirl()
install.packages("swirl")
library(swirl)
swirl()
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages("UsingR")
install.packages("caret")
library(caret)
library("caret")
install.packages("caret")
library("acepack", lib.loc="~/R/win-library/3.3")
detach("package:acepack", unload=TRUE)
install.packages("acepack")
detach("package:caret",unload = TRUE)
library('caret')
remove.packages(caret)
installed.packages("caret")
install.packages("caret")
library('caret')
install.packages("munsell")
library(munsell)
sessionInfo()
library(caret)
sessionInfo()
setwd("C:/Users/AjitSneha/Desktop/DataScience/Developing Data Products/DevelopingDataProducts_Project")
publish(title = 'PitchPresentationDDP', 'index.html', host = 'rpubs')
library(slidify)
library(slidifyLibraries)
publish(title = 'PitchPresentationDDP', 'index.html', host = 'rpubs')
setwd("C:/Users/AjitSneha/Desktop/DataScience/Developing Data Products/DevelopingDataProducts_Project/Developing Data Products Project Pitch Presentation")
publish(title = 'PitchPresentationDDP', 'index.html', host = 'rpubs')
